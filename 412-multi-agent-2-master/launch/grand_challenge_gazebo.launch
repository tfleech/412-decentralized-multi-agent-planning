<launch>

    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find 412-multi-agent-2)/worlds/turtlebot3_world.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="false"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
        <arg name="verbose" value="true"/>
    </include>

    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>

    <arg name="agent_1_x_pos" default="-0.7"/>
    <arg name="agent_1_y_pos" default="0.25"/>
    <arg name="agent_1_z_pos" default="0.0"/>
    <group ns="agent_1">
        <param name="tf_prefix" value="agent_1" />
        <param name="robot_description" command="$(find xacro)/xacro.py $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model agent_1 -x $(arg agent_1_x_pos) -y $(arg agent_1_y_pos) -z $(arg agent_1_z_pos) -param robot_description" />
        <!--include file="$(find turtlebot3_slam)/launch/turtlebot3_slam.launch">
            <param name="base_frame" value="agent_1/base_footprint"/>
            <param name="odom_frame" value="agent_1/odom"/>
            <param name="map_frame" value="agent_1/map"/>
        </include-->
    </group>

    <arg name="agent_2_x_pos" default="-0.5"/>
    <arg name="agent_2_y_pos" default="-1.3"/>
    <arg name="agent_2_z_pos" default="0.0"/>
    <group ns="agent_2">
        <param name="tf_prefix" value="agent_2" />
        <param name="robot_description" command="$(find xacro)/xacro.py $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model agent_2 -x $(arg agent_2_x_pos) -y $(arg agent_2_y_pos) -z $(arg agent_2_z_pos) -param robot_description" />
        <!--include file="$(find turtlebot3_slam)/launch/turtlebot3_slam.launch">
            <param name="base_frame" value="agent_2/base_footprint"/>
            <param name="odom_frame" value="agent_2/odom"/>
            <param name="map_frame" value="agent_2/map"/>
        </include-->
    </group>

    <arg name="agent_3_x_pos" default="0.0"/>
    <arg name="agent_3_y_pos" default="0.0"/>
    <arg name="agent_3_z_pos" default="0.0"/>
    <group ns="agent_3">
        <param name="tf_prefix" value="agent_3" />
        <param name="robot_description" command="$(find xacro)/xacro.py $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
        <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-urdf -model agent_3 -x $(arg agent_3_x_pos) -y $(arg agent_3_y_pos) -z $(arg agent_3_z_pos) -param robot_description" />
        <!--include file="$(find turtlebot3_slam)/launch/turtlebot3_slam.launch">
            <param name="base_frame" value="agent_3/base_footprint"/>
            <param name="odom_frame" value="agent_3/odom"/>
            <param name="map_frame" value="agent_3/map"/>
        </include-->
    </group>

    <node name="occupancy_grid_generator" pkg="412-multi-agent-2" type="occupancy_grid_gen.py" output="screen"/>

    <node name="map_server" pkg="map_server" type="map_server" args="$(find 412-multi-agent-2)/maps/challenge_map.yaml"/>

    <node name="viz" pkg="rviz" type="rviz" args="-d $(find 412-multi-agent-2)/maps/grand_challenge.rviz"/>

 </launch>

